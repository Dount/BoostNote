createdAt: "2022-01-27T02:42:12.618Z"
updatedAt: "2022-01-27T06:49:39.999Z"
type: "MARKDOWN_NOTE"
folder: "d93d185dcf894dbad7b3"
title: "科达实时音视频 KRTCSDK 项目总结"
tags: []
content: '''
  # 科达实时音视频 KRTCSDK 项目总结
  [TOC]
  
  ## 一、实现方式
  ### 1.1 Android开发
  1. 利用Android cmake 方式编译出JNI的动态so库。
  2. 利用cmake将JNI层与业务提供的头文件(.h)和实现文件(.so)进行关联
  3. 通过JNI语言和C++语言调用业务头文件来实现功能。
  4. 利用JAVA编写调用JNI的接口(Android studio可以实现关联)。
  5. 编写对外提供的JAVA接口。
  
  ### 1.2 代码结构
  cpp目录: JNI的实现代码，其中include文件夹中包括了回调和调用接口的实现。jni文件夹中包括JAVA调用JNI，JNI回调JAVA的方法。
  libs目录：业务提供头文件和arm64-v8a,armeabi-v7a的实现文件。
  src目录: 提供调用的接口以及回调接口。
  
  ### 1.2 IOS 开发
  
  
  ## 二、功能介绍
  39个接口，33个回调接口
  
  全局接口：库初始化，库销毁，创建\\销毁RTC客户端实例，获取设备管理器类实例
  注册相关接口：登录，登出
  房间相关接口：	加入房间，离开房间，响应平台呼叫
  发布订阅相关接口：发布/取消发布视频主流/辅流，发布/取消发布音频流，订阅/取消订阅/暂停音视频流
  视频相关接口：启用本地图像预览
  设备管理相关接口：获取设备（麦克风、扬声器、摄像头）进行测试设备。
  高级自定义接口：自定义主视频/辅流视频流参数，发送自定义视频/音频采集/编码数据
  事件回调：所有接口回调的事件。
  
  
  ## 三、遇到的问题
  1. 学习知识问题(难)
  一开始不熟悉JNI的开发，需要通过查阅资料，制作Demo慢慢熟悉。由其C++知识一边学一边实践。
  2. 联调功能(较难)
  要对各个接口进行详细测试，发现崩溃问题和逻辑问题要及时与业务沟通，并将日志打印给予业务去调查。
  3. 多实例方式的实现(较难)
  多个实例同时调用一个接口，在实现上需要考虑如何存储实例对象以及实例对象如何销毁。同时还要考虑在64位和32位机器上适配问题。
  
'''
linesHighlighted: []
isStarred: false
isTrashed: false
