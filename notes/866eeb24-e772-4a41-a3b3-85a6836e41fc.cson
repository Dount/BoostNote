createdAt: "2019-09-27T08:32:06.972Z"
updatedAt: "2019-09-27T09:16:07.173Z"
type: "MARKDOWN_NOTE"
folder: "a829d630b1a42b272c49"
title: "Android 横竖屏切换总结"
tags: []
content: '''
  ## Android 横竖屏切换总结
  [Android 横竖屏切换总结 - 简书](https://www.jianshu.com/p/52aa3a2c0417)
  
  ### Android切换横竖屏
  #### 1.应用的横竖屏设置
  应用的横竖屏设置主要是通过Activity的screenOrientation属性控制，属性值如下：
  | 值 | 描述 | 
  | :-----: | :------- | 
  | unspecified | 默认值，系统自动选择屏幕方向  | 
  | behind | 跟activity堆栈中的下面一个activity的方向一致  |  
  | landscape | 横屏方向，显示的宽比高长  |
  | portrait | 竖屏方向，显示的高比宽长  | 
  | sensor |  由设备的屋里方向传感器决定，如果用户旋转设备，屏幕就会横竖屏切换  |
  | nosensor |  忽略物理方向传感器，这样就不会随着用户旋转设备而横竖屏切换了（"unspecified"设置除外）|
  | user | 用户当前首选的方向|
  | reverseLandScape |API 9 以上，反向横屏|
  | reversePortrait |API 9 以上，反向竖屏|
  | sensorLandscape |API 9以上，横屏，但是可以根据物理方向传感器来切换正反向横屏|
  | sensorPortrait| API 9 以上，竖屏，但是可以根据物理防线传感器来切换正反向竖屏|
  | fullSensor | API 9 以上，上下左右四个方向，由物理方向传感器决定|
  | locked | API18 以上，锁死当前屏幕的方向|
  
  主要有以下两种方式设置screenOrientation属性值
  - 静态设置，即在Mainfest文件中配置screenOrientation属性
  - 动态设置，即调用Activity的setRequestedOrientation(@ActivityInfo.ScreenOrientation int requestedOrientation)方法设置screenOrientation属性值
  以上两种方法，均可以通过改变screenOrientation属性值的方式配置屏幕方向属性，人为的限制屏幕可自动选择或者锁定横竖屏。只不过动态设置可以通过动态的改变屏幕方向属性值的方式，从而动态的设置屏幕方向
  
  #### 2.系统的横竖屏设置
  系统横竖屏设置可以设置自动旋转，或者锁定某一方向的屏幕
  
  综述,系统的设置和应用的属性共同控制了屏幕的横竖展示。
  
  | screenOrientation属性值 | default | sensor | protrait |landscape|
  | :-----:|:-------|:-------|:-------|:-------|
  | 系统自动旋转| 自动旋转| 自动旋转| 锁定竖屏| 锁定横屏 |
  | 系统锁定横屏| 锁定竖屏| 自动旋转| 锁定竖屏| 锁定横屏 |
  
  总结：根据实际测试的结果可知，应用的属性约束优先级要大于系统设置的约束，只有应用属性screenOrientation属性值为默认值时（不设置），应用的横竖屏才受系统自动旋转设置约束。只要screenOrientation属性值不为默认值，应用界面的横竖屏切换只受当前Activity的screenOrientation属性控制。
  
  ### Android横竖瓶切换Activity生命周期
  关于Android横竖屏切换Activity是否会销毁重建，这个由Activity的configChanges属性控制。当一个配置改变时Activity默认会销毁重建，但是如果这个属性声明了此项配置后，Activit就不会销毁重建，而是回调Activity的onConfigurationChanged方法。
  
  configChanges的可配置属性如下：
  | 值 | 描述 | 
  | :-----: | :------- | 
  | mcc | 默认值，系统自动选择屏幕方向  | 
  | mnc | 跟activity堆栈中的下面一个activity的方向一致  |  
  | locale | 横屏方向，显示的宽比高长  |
  | keyboard | 竖屏方向，显示的高比宽长  | 
  | keyboardHidden |  由设备的屋里方向传感器决定，如果用户旋转设备，屏幕就会横竖屏切换  |
  | screenLayout |  忽略物理方向传感器，这样就不会随着用户旋转设备而横竖屏切换了（"unspecified"设置除外）|
  | orientation | 用户当前首选的方向|
  | screenSize |API 9 以上，反向横屏|
  | smallestScreenSize |API 9 以上，反向竖屏|
  | layoutDirection |API 9以上，横屏，但是可以根据物理方向传感器来切换正反向横屏|
  
  #### 1.横竖屏切换-Activity销毁重建
  对于android3.2（API13）及以后的系统，以下任意一种配置，横竖屏切换Activity的生命周期都会重新执行一次
  - 不配置configChanges属性
  - 设置android:configChanges="orientation"
  - 设置android:configChanges="orientation|keyboardHidden"(3.2系统之前的系统不会执行生命周期方法了)
  ![a17b5a08.png](:storage\\866eeb24-e772-4a41-a3b3-85a6836e41fc\\a17b5a08.png)
  以上三种配置，横竖屏切换时Activity均会销毁重建，Activity的生命周期都会重新执行一次
  
  #### 2.横竖屏切换-Activity不销毁重建
  配置android:configChanges="orientation|keyboardHidden|screenSize" 可以控制Activity在横竖屏切换时不销毁重建。
  ```
   @Override
      public void onConfigurationChanged(Configuration newConfig) {
          super.onConfigurationChanged(newConfig);
          int orientation = newConfig.orientation;
          if (orientation == ORIENTATION_LANDSCAPE){
              Log.i(TAG, "-------------横屏-------------");
          }else {
              Log.i(TAG, "-------------竖屏-------------");
          }
          Log.i(TAG, "onConfigurationChanged: "+orientation);
      }
  ```
  ![搜狗截图19年09月27日1712_1.png](:storage\\866eeb24-e772-4a41-a3b3-85a6836e41fc\\fe8e97b4.png)
  
  可见配置了android:configChanges="orientation|keyboardHidden|screenSize"横竖屏切换时Activity不会销毁重建，而是会回调Activity的onConfigurationChanged方法。这里需要注意的是，第一次切换时onConfigurationChanged方法会回调两次
  
  总结：在遇到Android横竖屏切换的问题时，我们需要解决的问题主要有两个，布局的变化和数据的存储恢复。可以综合以上的属性设置达到最终自己想要的效果。
'''
linesHighlighted: [
  1
]
isStarred: false
isTrashed: false
