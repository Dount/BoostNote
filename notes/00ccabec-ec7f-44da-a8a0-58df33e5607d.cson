createdAt: "2023-01-08T15:07:34.029Z"
updatedAt: "2023-03-21T16:05:46.298Z"
type: "MARKDOWN_NOTE"
folder: "c3bf24344ddc9bd2af22"
title: "WindowManagerService"
tags: []
content: '''
  # WindowManagerService 
  
  ## 概述
  在Android中， WindowManagerService负责对系统中的所有窗口进行管理。所谓的管理大致包括对窗口进行创建、删除，以及更换窗口的焦点。
  
  ## 作用
  ![3515b8b8.png](:storage\\00ccabec-ec7f-44da-a8a0-58df33e5607d\\3515b8b8.png)
  
  - 窗口管理
  WMS是窗口的管理者，它负责窗口的启动、添加和删除，另外，窗口的大小和层级也是由WMS进行管理的。窗口管理的核心成员有DisplayContent、WindowToken和WindowState。
  
  - 窗口动画
  窗口间进行切换时，使用窗口动画可以显得更炫一些，窗口动画由WMS的动画子系统来负责，动画子系统的管理者为WindowAnimator。
  
  - 输入系统的中转站
  通过对窗口的触摸从而产生触摸事件，InputManagerService（IMS）会对触摸事件进行处理，它会寻找一个最合适的窗口来处理触摸反馈信息，WMS是窗口的管理者，因此，WMS“理所应当”的成为了输入系统的中转站。
  
  - 输入系统相关：
  窗口并不具备有绘制的功能，因此每个窗口都需要有一块Surface来供自己绘制。为每个窗口分配Surface是由WMS来完成的。
  
  ## Window分类
  ![d602dccf.png](:storage\\00ccabec-ec7f-44da-a8a0-58df33e5607d\\d602dccf.png)
  
  1. Application Window(应用窗口)：例如Activity，Dialog；【取值范围为1~99】
  2. Sub Window(子窗口)：不能独立存在，需要依附在其他窗口，例如PopupWindow【取值范围为1000~1999】
  3. System Window(系统窗口)：例如Toast、输入法窗口、系统音量条窗口、系统错误窗口等【2000~2999】
  
  ## Window、WindowManager、WMS 关系
  ![c256833f.png](:storage\\00ccabec-ec7f-44da-a8a0-58df33e5607d\\c256833f.png)
  
  Window:它是一个抽象类，具体实现类为 PhoneWindow ，它对 View 进行管理。Window是View的容器，View是Window的具体表现内容。创建一个Window，通过windowManager完成。
  WindowManager:是用来添加、删除、更新Window（具体是View）的，与WMS通过Binder来进行跨进程通信，将具体的工作交由WMS来处理。
  WindowsManagerService:是在SystemServer进程中的，WindowManger中的所有操作都是由WMS来最终完成的。
  
  ## 启动过程
  ![682341f0.png](:storage\\00ccabec-ec7f-44da-a8a0-58df33e5607d\\682341f0.png)
  
  1. SystemServer中，优先启动引导服务，核心服务，其它服务。WMS属于其它服务的一种。
  2. 在WMS启动先，会先启动IMS,并将IMS对象作为参数赋值到WMS中，后续WMS处理输入事件时会与IMS进行交互。
  3. WMS的main方法中，获取DisplayThread的handler实例，在display线程中创建WMS实例对象。
  4. WMS实例对象创建完成后，display进入等待状态。
  5. 调用WMS中OnInitReady方法，开始初始化窗口管理策略，通过PWM(PhoneWindowManager)在ui线程中进行初始化，完成后通过Handler中notifyAll唤醒display线程。
  6. 完成初始化窗口管理策略后，WMS中displayReady方法初始化屏幕显示信息。
  7. WMS初始化屏幕显示信息后，最后通过WMS的SystemReady方法通知WMS初始化工作完成。
  
  ## WMS添加一个窗口
  ![3f07ec12.png](:storage\\00ccabec-ec7f-44da-a8a0-58df33e5607d\\3f07ec12.png)
  
  1. 对于不通类型的窗口添加过程不同，但是对于WMS处理部分，基本上是一样的。
  2. 通过WindowManager的addview方法，但实际会最终调用到WindowManagerGlobal中的addView方法中。
  3. WindowManagerGlobal对上层参数进行检查并进行相应的调整，同时初始化ViewRootImpl对象，将View交由ViewRootImpl管理。
  4. 在ViewRootImpl会完成对View的测量，布局和绘制。
  5. ViewRootImpl通过Binder与WMS进行跨进程通信,调用addToDisplay方法为窗口分配画布Surface,最终交给SurfaceFlinger，并绘制到屏幕上。
  
  ## WMS删除一个窗口
  1. 通过WindowManager的removeView方法，但实际会最终调用到WindowManagerGlobal中的removeView方法中。
  2. 在removeView方法会通过索引获取到对应的ViewRootImpl。然后调用ViewRootImpl的die方法。
  3. 若当前View已绘制完成，直接删除。若View正在绘制则通过Handler异步的方式，将View添加到一个待删除列表中进行删除。
  4. 删除将该View在索引表中删除。
  
  ## 文献
  [WMS介绍_yaoming168的博客-CSDN博客_wms介绍](https://blog.csdn.net/yaoming168/article/details/89418572)
  [WMS—启动过程 - Gityuan博客 \\| 袁辉辉的技术博客](http://gityuan.com/2017/01/08/windowmanger/)
  [WMS—启动窗口(StartingWindow) - Gityuan博客 \\| 袁辉辉的技术博客](http://gityuan.com/2017/01/15/wms_starting_window/)
  [Android解析WindowManagerService（一）WMS的诞生 \\| BATcoder - 刘望舒](http://liuwangshu.cn/framework/wms/1-wms-produce.html)
  [Window与WMS通信过程-阿里云开发者社区](https://developer.aliyun.com/article/1113415)
  [WindowManagerService_橙子19911016的博客-CSDN博客](https://blog.csdn.net/xingyu19911016/article/details/128596245)
  [WindowManagerService的启动 - 简书](https://www.jianshu.com/p/5e15dc18a05c)
  [Wms 启动流程分析和介绍-51CTO.COM](https://www.51cto.com/article/688925.html)
  
  [Android WMS工作原理浅析（一）_惜许的博客-CSDN博客](https://blog.csdn.net/a734474820/article/details/125602626)
  [Android WMS工作原理浅析（二）_惜许的博客-CSDN博客](https://blog.csdn.net/a734474820/article/details/125613810)
  
  [WMS（一）：Window的添加过程_bug樱樱的博客-CSDN博客](https://blog.csdn.net/weixin_47933729/article/details/113738700)
  [WMS（二）：Window的删除过程_removewindow_bug樱樱的博客-CSDN博客](https://blog.csdn.net/weixin_47933729/article/details/113743864)
  [Android进阶（四）Window和WindowManager_window.setcolor1 = () =>{_爬坑仰望天空的博客-CSDN博客](https://blog.csdn.net/www851903307/article/details/86686261)
  
  [深入理解WMS（一）：Window的创建过程_bug樱樱的博客-CSDN博客](https://blog.csdn.net/weixin_47933729/article/details/113659895)
  [深入理解WMS（二）：Dialog与Toast源码解析_android wms dialog_bug樱樱的博客-CSDN博客](https://blog.csdn.net/weixin_47933729/article/details/113687194)
  [深入理解WMS（三）：剖析Activity，View，Window之间的关系_bug樱樱的博客-CSDN博客](https://blog.csdn.net/weixin_47933729/article/details/113700352)
  [深入理解WMS（四）：从WMS的角度分析Activity之间的关系_bug樱樱的博客-CSDN博客](https://blog.csdn.net/weixin_47933729/article/details/113728775)
  
  
'''
linesHighlighted: []
isStarred: false
isTrashed: false
